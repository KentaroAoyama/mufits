from typing import Dict
import pickle
from pyproj import Transformer

from matplotlib import pyplot as plt

ORIGIN = (42.690531, 141.376630, 1041.0)
A_LATLNG = (42.688814, 141.380492)
CRS_WGS84 = "epsg:4326"
CRS_RECT = "epsg:6680"

A = (-71223.87096774194, -145290.54896551723)
# On Shibuya's coordinates
elv_bounds = {
    -400.0: (
        -71754.67036219689,
        -71581.16580004153,
        -145043.25401247104,
        -144891.61589220443,
    ),
    -350.0: (
        -71754.67036219689,
        -71581.16580004153,
        -145043.25401247104,
        -144891.61589220443,
    ),
    -300.0: (
        -71758.21255898,
        -71544.66176387813,
        -145060.27103710253,
        -144874.30162696802,
    ),
    -250.0: (
        -71758.21255898,
        -71544.66176387813,
        -145060.27103710253,
        -144874.30162696802,
    ),
    -200.0: (
        -71757.81466838245,
        -71517.56638464957,
        -145082.910863177,
        -144851.13337315145,
    ),
    -150.0: (
        -71757.81466838245,
        -71517.56638464957,
        -145082.910863177,
        -144851.13337315145,
    ),
    -100.0: (
        -71763.08914496221,
        -71496.16278189578,
        -145088.36853095063,
        -144845.1637910027,
    ),
    -50.0: (
        -71763.08914496221,
        -71496.16278189578,
        -145088.36853095063,
        -144845.1637910027,
    ),
    0.0: (
        -71764.53028529727,
        -71488.04969556516,
        -145088.0960603961,
        -144847.76877463746,
    ),
    50.0: (
        -71764.53028529727,
        -71488.04969556516,
        -145088.0960603961,
        -144847.76877463746,
    ),
    100.0: (
        -71763.08914496221,
        -71496.16278189578,
        -145090.71755739782,
        -144850.38201495569,
    ),
    150.0: (
        -71763.08914496221,
        -71496.16278189578,
        -145090.71755739782,
        -144850.38201495569,
    ),
    200.0: (
        -71715.92455217899,
        -71487.11804928796,
        -145118.98844159878,
        -144875.78370165086,
    ),
    250.0: (
        -71715.92455217899,
        -71487.11804928796,
        -145118.98844159878,
        -144875.78370165086,
    ),
    300.0: (
        -71690.66820388302,
        -71475.19103601007,
        -145130.10193754928,
        -144912.62915163534,
    ),
    350.0: (
        -71690.66820388302,
        -71475.19103601007,
        -145130.10193754928,
        -144912.62915163534,
    ),
    400.0: (
        -71669.23548718308,
        -71455.66528278375,
        -145149.83128270062,
        -144949.54065508756,
    ),
    450.0: (
        -71669.23548718308,
        -71455.66528278375,
        -145149.83128270062,
        -144949.54065508756,
    ),
    500.0: (
        -71653.5527748502,
        -71445.72287016927,
        -145172.4463387247,
        -144989.346126096,
    ),
    550.0: (
        -71653.5527748502,
        -71445.72287016927,
        -145172.4463387247,
        -144989.346126096,
    ),
    600.0: (
        -71624.56013679673,
        -71435.76104825734,
        -145200.83281649425,
        -145011.99420885395,
    ),
    650.0: (
        -71624.56013679673,
        -71435.76104825734,
        -145200.83281649425,
        -145011.99420885395,
    ),
    700.0: (
        -71604.97615567809,
        -71408.63655508262,
        -145229.18626752993,
        -145034.62577824498,
    ),
    750.0: (
        -71604.97615567809,
        -71408.63655508262,
        -145229.18626752993,
        -145034.62577824498,
    ),
    800.0: (
        -71554.91957757605,
        -71373.77745687739,
        -145266.10602766564,
        -145108.71299902047,
    ),
    850.0: (
        -71554.91957757605,
        -71373.77745687739,
        -145266.10602766564,
        -145108.71299902047,
    ),
    900.0: (
        -71501.0878911216,
        -71356.1974857196,
        -145308.73941276252,
        -145179.97230570752,
    ),
}

if __name__ == "__main__":
    # Shibuya's coordinates is found to be "epsg:6680"
    wgs_rect_trans = Transformer.from_crs(CRS_WGS84, CRS_RECT, always_xy=True)
    xy_origin = wgs_rect_trans.transform(ORIGIN[1], ORIGIN[0])
    x_origin, y_origin = xy_origin
    # Convert to MUFITS coordinates
    elv_bounds_mufits: Dict = {}
    for elv, bounds_rect in elv_bounds.items():
        xmin = bounds_rect[0] - x_origin
        xmax = bounds_rect[1] - x_origin
        ymin = bounds_rect[2] - y_origin
        ymax = bounds_rect[3] - y_origin
        assert xmin < xmax
        assert ymin < ymax
        elv_bounds_mufits[elv] = (xmin, xmax, ymin, ymax)

    ns0_ls, ns1_ls, ew0_ls, ew1_ls = [], [], [], []
    for elv, bounds_rect in elv_bounds_mufits.items():
        ns0_ls.append(bounds_rect[2])
        ns1_ls.append(bounds_rect[3])
        ew0_ls.append(bounds_rect[0])
        ew1_ls.append(bounds_rect[1])

    # NS
    fig, ax = plt.subplots()
    ax.scatter(list(elv_bounds_mufits.keys()), ns0_ls)
    ax.scatter(list(elv_bounds_mufits.keys()), ns1_ls)
    fig.savefig("ns.png", dpi=200, bbox_inches="tight")
    plt.close()

    # EW
    fig, ax = plt.subplots()
    ax.scatter(ew0_ls, list(elv_bounds_mufits.keys()))
    ax.scatter(ew1_ls, list(elv_bounds_mufits.keys()))
    fig.savefig("ew.png", dpi=200, bbox_inches="tight")
    plt.close()

    with open("./elv_bounds_mufits.pkl", "wb") as pkf:
        pickle.dump(elv_bounds_mufits, pkf, pickle.HIGHEST_PROTOCOL)
